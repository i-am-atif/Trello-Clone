### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Board {
  id: Int!
  lists: [List!]!
  title: String!
  users: [User!]!
}

type Card {
  createdBy: User
  deadline: String!
  description: String!
  id: Int!
  insideList: List
  label: String!
  title: String!
}

type List {
  cards: [Card!]!
  id: Int!
  insideBoard: [Board]
  title: String!
}

type Mutation {
  createBoard(title: String!): Board!
  createCardofList(deadline: String!, description: String!, label: String!, listId: Int!, title: String!): Card!
  createCardofUser(deadline: String!, description: String!, label: String!, title: String!): Card!
  createList(boardId: Int!, title: String!): List!
  deleteBoardById(id: Int!): Board
  deleteCardById(id: Int!): Card
  deleteListById(id: Int!): List
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, firstName: String!, lastName: String!, password: String!): AuthPayload!
  updateBoardById(id: Int!, userId: [Int]!): Board
  updateCardById(deadline: String, description: String, id: Int!, label: String, title: String): Card
}

type Query {
  getAllBoards: [Board!]!
  getAllCards: [Card!]!
  getAllCardsOfList(insideListId: Int!): [Card!]!
  getAllCardsOfUser: [Card!]!
  getAllLists: [List!]!
  getAllListsOfBoard(boardId: Int!): [List!]!
  getCardById(id: Int!): Card
  getListById(id: Int!): List
}

type User {
  boards: [Board!]!
  cards: [Card!]!
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
}
